
#include "ceto.h"

;

;

;

;

;

;

;

;

;

;

;

;

;

;
#include "ceto_private_listcomp.donotedit.autogenerated.h"
;
#include "ceto_private_boundscheck.donotedit.autogenerated.h"
;
#include "ceto_private_convenience.donotedit.autogenerated.h"
;
#include "ceto_private_append_to_pushback.donotedit.autogenerated.h"
;
struct Node : public ceto::shared_object, public std::enable_shared_from_this<Node> {

    ceto::propagate_const<std::shared_ptr<Node>> func;

    std::vector<ceto::propagate_const<std::shared_ptr<Node>>> args;

    explicit Node( ceto::propagate_const<std::shared_ptr<Node>>  func, const std::vector<ceto::propagate_const<std::shared_ptr<Node>>>&  args) : func(func), args(args) {
            static_assert(!std::is_reference_v<decltype(func)>);
            static_assert(!std::is_const_v<std::remove_reference_t<decltype(func)>>);
            static_assert(!std::is_const_v<decltype(this -> func)>);
    }

    Node() = delete;

};

    auto main() -> int {
        std::cout << (*ceto::mad((*ceto::mad(ceto::make_shared_propagate_const<const Node>(nullptr, std::vector<ceto::propagate_const<std::shared_ptr<Node>>>{}))).args)).size();
    }

